version: "3"
services:
  task-runner:
    image: ${MS_IMAGE_PREFIX}/task-runner:${MS_IMAGE_TAG}
    container_name: task-runner
    deploy:
      resources:
        limits:
          memory: ${MS_TASK_MEM_LIMIT:-1g}
    environment:
      FORMAT_MESSAGES_PATTERN_DISABLE_LOOKUPS: 'true'
      RUN_AS_NON_ROOT_USER: 'true'
    command: sh -c 'sed -i "s/:101:/:${MS_DOCKER_GID:-101}:/g" /etc/group; /deployments/run-java.sh'
    ports:
      - ${MS_NODE_CONTROLLER_PORT}:8082
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "8082" ]
      interval: 6s
      timeout: 5s
      retries: 50
    volumes:
      - ${MS_BASE}/metersphere/data/app:/opt/metersphere/data/app
      - ${MS_BASE}/metersphere/logs/task-runner:/opt/metersphere/logs/task-runner
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      - ms-network
  node-exporter:
    image: ${MS_IMAGE_PREFIX}/node-exporter:v1.5.0
    container_name: nodeexporter
    user: root
    privileged: true
    deploy:
      resources:
        limits:
          memory: 128m
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: always
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "9100" ]
      interval: 6s
      timeout: 5s
      retries: 50
    network_mode: service:task-runner
